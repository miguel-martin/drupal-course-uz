<?php

// En este archivo haré toda la lógica del MODULO, se llama asi por convencion de nombre.



/**
 * Implements hook_menu.
 * Definir las rutas del formulario...
 */
function catalogo_menu(){

	// la ruta de administrarlo
	$items['admin/config/catalogo'] = array(
    	'title' => 'Gestión de catálogo',
    	'page callback' => 'drupal_get_form', /* funcion que va a renderizar un formulario */
    	'page arguments' => array('catalogo_form'), /* el id del formulario que renderizará */
    	'access arguments' => array('administer content'), /* solo lo ve quien puede administrar contenido */
    	'type' => MENU_CALLBACK,
  	);

  	// la ruta de mostrar el /catalogo
	$items['catalogo'] = array(
    	'title' => 'Página de catálogo',
    	'page callback' => '_catalogo_get_info_pagina', /* funcion que va a renderizar un formulario */
    	//'page arguments' => array('catalogo_form'), /* el id del formulario que renderizará */
    	'access arguments' => array('administer content'), /* solo lo ve quien puede administrar contenido */
    	'type' => MENU_CALLBACK,
  	);

	return $items;

}

/**
 * Implements hook_form.
 * Construir el formulario.
 */
function catalogo_form($node, &$form_state){

	// creamos un fieldset para agrupar todo allí dentro...
	$form['config'] = array(
		'#type' => 'fieldset',
		'#title' => 'Configuracion basica',
	);

	// creo el cammpo checkbox...
	$form['config']['oferta'] = array(
  		'#type' => 'checkbox', 
		'#title' => 'Oferta 20%',
		'#default_value' => variable_get('catalogo_oferta',0), 
		//como en el submit hemos guardado aqui la variable, la leemos. Si no existe, le ponemos por defecto 0.
	);

	// creo el campo descripcion corta...
	$form['config']['desc_corta'] = array(
  		'#type' => 'textfield', 
  		'#size' => 60,
		'#title' => 'Descripcion corta',
		'#default_value' => variable_get('catalogo_desc_corta',''),
	);

	// creo el campo descripcion corta...
	$form['config']['desc_larga'] = array(
  		'#type' => 'textarea', 
		'#title' => 'Descripcion larga',
		'#default_value' => variable_get('catalogo_desc_larga',''),
		'#required' => TRUE, /* comprobar que no está vacío */
	);

	// el campo fichero...
	// ojo, hay que marcar como que ese fichero lo está usando alguien/algo, porque sino cuando pasa el cron lo borra!!!
	// podríamos usar módulo Drag&Drop que es un widget más interesante para subir...
	$form['config']['catalogo_pdf'] = array(
  		'#title' => 'Catálogo PDF',
  		'#type' => 'managed_file',
  		'#description' => 'Sube el fichero PDF de catálogo.',
  		'#upload_location' => 'public://catalogo/',
  		'#default_value' => variable_get('catalogo_pdf'),
  		'#upload_validators' => array(
    		'file_validate_extensions' => array('pdf'),
    		// Pass the maximum file size in bytes
    		//'file_validate_size' => array(MAX_FILE_SIZE*1024*1024),
  		),
	);

	// creo el botón submit
	$form['config']["submit_button"] = array(
		'#type' => 'submit',
		'#value' => 'Guardar',
	);

	return $form;
}

/**
 * Implements hook_form_validate
 * Validacion del formulario, se ejecuta en cuanto haces submit.
 */
 function catalogo_form_validate($node, &$form_state){

 	//dsm($form_state);

 	// Vamos a comprobar que la descripcion corta es > que 10 caracteres.
 	if (strlen($form_state['values']['desc_corta'])<5){
 		form_set_error('desc_corta','La descripción corta debe ser mayor que cinco caracteres');
 	}

 }


 /**
 * Implements hook_form_validate
 * Envío del formulario, se ejecuta en cuando pasa el validador de validate.
 */
 function catalogo_form_submit($node, &$form_state){

 	global $user;

 	//dsm($form_state);
 	//dsm($user);

 	// aqui deberiamos hacer el file add usage para que se guarde que el fichero se guarde como que lo usa alguien. 
 	// Sino cron lo borraría.

 	// vamos a usar de momento la tabla 'variable', aunque lo idóneo sería hacerlo en custom entity, pero nos sirve.
 	// la tabla variable sirve para guardar basurillas

 	variable_set('catalogo_desc_corta', $form_state['values']['desc_corta']);
 	variable_set('catalogo_desc_larga', $form_state['values']['desc_larga']);
 	variable_set('catalogo_oferta', $form_state['values']['oferta']);
 	variable_set('catalogo_pdf', $form_state['values']['catalogo_pdf']);


 	// indicarle que este archivo lo va a usar este módulo, que no lo borre automáticamente...
 	// le podemos asociar el usuario o también podríamos ponerle
 	// file_usage_add(file_load($form_state['values']['catalogo_pdf']), 'catalogo', 'catalogo', 1);  // solo hay una aparición de catalogo
 	file_usage_add(file_load($form_state['values']['catalogo_pdf']), 'catalogo', 'user', $user->uid);  



 	drupal_set_message('Se ha guardado correctamente',$type='status',$repeat = TRUE);

 }

/**
 * Implements hook_block_info
 * Vamos a crear el bloque, que pasará a estar disponible en Bloques y sin asignar.
 */
function catalogo_block_info() {
  // This example comes from node.module.
  $blocks['catalogo'] = array(
    'info' => 'Catálogo',
  );

  return $blocks;
}

/**
 * Vamos a hacer que se pinte el módulo. Pero luego hay que asignarlo a Sidebar o a la region donde queramos.
 */
function catalogo_block_view($delta){
	$block = array();

	if ($delta == 'catalogo'){
		$block['subject'] = 'Catálogo';
		$block['content'] = _catalogo_get_info(); 
		//vamos a hacer una funcion que nos pinte el contenido aunque sería mejor hacerlo con theming!
	}

	return $block;
}

function _catalogo_get_info(){
	/*$content = '';
	if (variable_get('catalogo_oferta')){
		$content .= '<p>Todo al 20%</p>';
	}
	$content .= '<p>'.variable_get('catalogo_desc_corta').'</p>';

	if ($fid = variable_get('catalogo_pdf',0)){
		$file=file_load($fid);
	}
	if ($file){
		$content .= l('Catálogo PDF',$file->uri); // esto crea un link
	}*/

	//return $content; // ahora ya no usaremos la devolución del contenido, sino que pasamos al control al theme.


	// ahora vamos a usar la potencia de theme para poder hacer preprocess y process
	$variables['catalogo_desc_corta'] = variable_get('catalogo_desc_corta');
	$variables['catalogo_pdf'] = variable_get('catalogo_pdf');
	$variables['catalogo_oferta'] = variable_get('catalogo_oferta');
	return theme('catalogo_bloque', $variables);			// el nombre de catalogo_bloque será el que le hemos definido en el hook_theme
}


function _catalogo_get_info_pagina(){
	$content = '';
	if (variable_get('catalogo_oferta')){
		$content .= '<p>Todo al 20%</p>';
	}
	$content .= '<p>'.variable_get('catalogo_desc_larga').'</p>';

	if ($fid = variable_get('catalogo_pdf',0)){
		$file=file_load($fid);
		//dsm($file);
	}
	if ($file){
		$content .= l('Catálogo PDF',$file->uri); // esto crea un link
	}

	$link = l('Gestionar catálogo','admin/config/catalogo');
	$content .= $link;

	// ToDo cambiar esto para que llame a theme tb

	return $content;
}




/**
 * Implements hook_theme()
 */
function catalogo_theme($existing, $type, $theme, $path){
	return array(
		'catalogo_bloque' => array ( 		// le indicamos cómo renderizar catalogo_bloque -> da nombre al hook para template_process_HOOK
			'template' => 'catalogo-bloque',	// se renderizará con esta plantilla catalogo-bloque.tpl.php
												// si no pusiera la plantilla, me buscaría la funcion theme_catalogo_bloque
			'variables' => array(	
				'catalogo_desc_corta' => NULL,	// las variables que espera recibir de quien llame a theme. si no se las paso, salen a null
				'catalogo_oferta' => NULL,
				'catalogo_pdf' => NULL,
			) 
		)

	);

}


/**
 * Implement template_process_HOOK
 * Vamos a preparar las variables, por ejemplo la de PDF.
 * También podemos CREAR nuevas variables aqui, como por ejemplo enlace_pdf
 */
function template_process_catalogo_bloque(&$variables){
	// ToDo sería más conveniente aun hacer en el preprocess settear la variable con la ruta, mimetype, ... (hacer el file_load)
	// y luego ya generar el link en el process, osea, aqui

	if ($variables['catalogo_pdf']){
		$file=file_load($variables['catalogo_pdf']);
	    if ($file){
		    $pdf = l('Catálogo PDF',file_create_url($file->uri)); // esto crea un link
		    $variables['enlace_pdf'] = $pdf;
	    }
	}

}

